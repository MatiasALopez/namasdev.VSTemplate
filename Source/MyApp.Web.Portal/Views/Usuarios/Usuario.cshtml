@using MyApp.Entidades.Metadata;
@using MyApp.Web.Portal.ViewModels.Usuarios;
@using MyApp.Web.Portal.Controllers;
@model UsuarioViewModel
@{
    ViewBag.Title = $"{Model.PaginaModo} {UsuarioMetadata.NOMBRE}";

    var controlesIds = new
    {
        Form = $"frm{UsuarioMetadata.NOMBRE}"
    };
    var actions = new
    {
        Index = nameof(UsuariosController.Index),
        Editar = nameof(UsuariosController.Editar),
        DesmarcarComoBorrado = nameof(UsuariosController.DesmarcarComoBorrado),
    };
}
<h2 class="my-3">@ViewBag.Title</h2>
<form id="@controlesIds.Form" action="@Url.Action()" method="post" class="mt-3">
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(excludePropertyErrors: true)
    @Html.Partial("_Errores")
    @Html.Partial("_ResultadoOk")
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.PaginaModo)
    <div class="form-row">
        <div class="form-group col-lg-5 col-md-6">
            @Html.LabelFor(m => m.Nombres, new { @class = "requerido" })
            @Html.TextBoxFor(m => m.Nombres, new { @class = "form-control form-control-required", maxlength = UsuarioMetadata.Propiedades.Nombres.TAMAÑO_MAX })
            @Html.ValidationMessageFor(m => m.Nombres)
        </div>
        <div class="form-group col-lg-5 col-md-6">
            @Html.LabelFor(m => m.Apellidos, new { @class = "requerido" })
            @Html.TextBoxFor(m => m.Apellidos, new { @class = "form-control form-control-required", maxlength = UsuarioMetadata.Propiedades.Apellidos.TAMAÑO_MAX })
            @Html.ValidationMessageFor(m => m.Apellidos)
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-lg-5 col-md-6">
            @Html.LabelFor(m => m.Email, new { @class = "requerido" })
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-required", maxlength = UsuarioMetadata.Propiedades.Email.TAMAÑO_MAX })
            @Html.ValidationMessageFor(m => m.Email)
        </div>
        <div class="form-group col-lg-5 col-md-6">
            @Html.LabelFor(m => m.Rol, new { @class = "requerido" })
            @Html.DropDownListFor(m => m.Rol, Model.RolesSelectList, "", new { @class = "form-control form-control-required" })
            @Html.ValidationMessageFor(m => m.Rol)
        </div>
    </div>
    <button type="submit" class="btn btn-primary" data-toggle-state-container="#@controlesIds.Form">Guardar</button>
    <a href="@Url.Action(actions.Index)" class="btn btn-secondary">Volver</a>
</form>
@section bodyScripts {
    <script type="text/javascript">
        $(function () {
            myApp.setActiveMenuOption('usuarios');

            @if (!String.IsNullOrWhiteSpace(Model.DesmarcarBorradoUsuarioId)) { <text>
            var options = {
                confirm: true,
                confirmTitle: 'Usuario pre-existente',
                confirmMessage: 'No se puede agregar el usuario.<br />\
                El correo electrónico ya está siendo utilizado por otro usuario que ha sido borrado con anterioridad.<br />\
                Si desea reactivar el usuario borrado haga clic en el botón "Reactivar usuario".<br />\
                Sino, deberá ingresar otro correo electrónico para el nuevo usuario.',
                confirmOptions: {
                    size: 'lg',
                    buttons: {
                        confirm: {
                            label: 'Reactivar usuario',
                            className: 'btn-primary',
                        }
                    }
                }
            };

            myApp.postJson(
                '@Url.Action(actions.DesmarcarComoBorrado)/@Model.DesmarcarBorradoUsuarioId',
                nmd.ui.forms.createDataWithAntiForgeryToken('#@controlesIds.Form'),
                function (response) {
                    if (response.success) {
                        nmd.ui.controls.showSuccessModal(
                            'Usuario reactivado correctamente. Si desea revisar/editar sus datos haga clic <a href="@Url.Action(actions.Editar)/@Model.DesmarcarBorradoUsuarioId">aquí</a>.',
                            function () {
                                window.location = '@Url.Action(actions.Index)';
                            });
                    }
                    else {
                        myApp.showErrorModal(response.message);
                    }
                },
                options
            );
            </text>}
        });
    </script>
}
